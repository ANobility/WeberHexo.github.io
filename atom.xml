<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Weber&#39;s island</title>
  
  
  <link href="https://anobiity.github.io/atom.xml" rel="self"/>
  
  <link href="https://anobiity.github.io/"/>
  <updated>2022-09-28T11:25:39.467Z</updated>
  <id>https://anobiity.github.io/</id>
  
  <author>
    <name>Weber</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>牛客面试必刷TOP101</title>
    <link href="https://anobiity.github.io/2022/09/15/%E7%89%9B%E5%AE%A2%E9%9D%A2%E8%AF%95%E5%BF%85%E5%88%B7TOP101/"/>
    <id>https://anobiity.github.io/2022/09/15/%E7%89%9B%E5%AE%A2%E9%9D%A2%E8%AF%95%E5%BF%85%E5%88%B7TOP101/</id>
    <published>2022-09-15T17:12:46.000Z</published>
    <updated>2022-09-28T11:25:39.467Z</updated>
    
    
    <summary type="html">&lt;p&gt;本笔记为newcoder面试必刷TOP101的解题思路，笔者能力有限，内容仅供参考。&lt;/p&gt;
&lt;p&gt;本笔记将会包括算法和数据结构方向11个模块，动归、查找/排序、二叉树、链表、堆栈/队列、哈希、递归/回溯、字符串、双指针、贪心和模拟。&lt;/p&gt;
&lt;p&gt;本笔记尚未完结，不定期更新，详细情况请点击右下角阅读更多。&lt;br&gt;</summary>
    
    
    
    
    <category term="算法笔试" scheme="https://anobiity.github.io/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>9.15蚂蚁集团算法岗笔试</title>
    <link href="https://anobiity.github.io/2022/09/15/9-15%E8%9A%82%E8%9A%81%E9%9B%86%E5%9B%A2%E7%AE%97%E6%B3%95%E5%B2%97%E7%AC%94%E8%AF%95/"/>
    <id>https://anobiity.github.io/2022/09/15/9-15%E8%9A%82%E8%9A%81%E9%9B%86%E5%9B%A2%E7%AE%97%E6%B3%95%E5%B2%97%E7%AC%94%E8%AF%95/</id>
    <published>2022-09-15T14:45:05.000Z</published>
    <updated>2022-09-15T14:29:08.535Z</updated>
    
    
    <summary type="html">&lt;p&gt;2022.9.15日，蚂蚁计算算法岗笔试，我投递的岗位是算法工程师-机器学习岗位，考试时长90mins，题型为6道单选题，6道多选题和3道编程题，单选题主要是一些智力测试和脑筋急转弯，包含简单的CS知识例如最小生成树，最大堆插入、删除、排序复杂度等；多选题主要是机器学习和深度学习相关的知识，例如如何避免过拟合，原型聚类都有哪些，门控单元（GRU）等。&lt;/p&gt;</summary>
    
    
    
    
    <category term="算法笔试" scheme="https://anobiity.github.io/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>操作系统笔记（4）- 进程间通信</title>
    <link href="https://anobiity.github.io/2022/09/11/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1%E4%B8%8E%E8%B0%83%E5%BA%A6/"/>
    <id>https://anobiity.github.io/2022/09/11/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1%E4%B8%8E%E8%B0%83%E5%BA%A6/</id>
    <published>2022-09-10T23:32:35.000Z</published>
    <updated>2022-09-13T19:18:27.035Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;进程间通信&quot;&gt;&lt;a href=&quot;#进程间通信&quot; class=&quot;headerlink&quot; title=&quot;进程间通信&quot;&gt;&lt;/a&gt;进程间通信&lt;/h1&gt;&lt;p&gt;进程是需要频繁的和其他进程进行交流的。例如，在一个 shell 管道中，第一个进程的输出必须传递给第二个进程，这样沿着管道进行下去。因此，进程之间如果需要通信的话，必须要使用一种良好的数据结构以至于不能被中断。下面我们会一起讨论有关 进程间通信(Inter Process Communication, IPC) 的问题。&lt;/p&gt;</summary>
    
    
    
    
    <category term="操作系统" scheme="https://anobiity.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统笔记（3）- 进程和线程</title>
    <link href="https://anobiity.github.io/2022/09/01/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/"/>
    <id>https://anobiity.github.io/2022/09/01/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0-%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</id>
    <published>2022-08-31T21:07:53.000Z</published>
    <updated>2022-09-10T21:27:37.665Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;进程和线程&quot;&gt;&lt;a href=&quot;#进程和线程&quot; class=&quot;headerlink&quot; title=&quot;进程和线程&quot;&gt;&lt;/a&gt;进程和线程&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://pic.leetcode-cn.com/1612664902-lwiEpk-os2-0.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="操作系统" scheme="https://anobiity.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统笔记（2）- 操作系统概念与结构</title>
    <link href="https://anobiity.github.io/2022/08/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%BB%93%E6%9E%84/"/>
    <id>https://anobiity.github.io/2022/08/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%BB%93%E6%9E%84/</id>
    <published>2022-08-24T16:01:13.000Z</published>
    <updated>2022-08-31T20:00:58.913Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;操作系统概念&quot;&gt;&lt;a href=&quot;#操作系统概念&quot; class=&quot;headerlink&quot; title=&quot;操作系统概念&quot;&gt;&lt;/a&gt;操作系统概念&lt;/h1&gt;&lt;h2 id=&quot;进程&quot;&gt;&lt;a href=&quot;#进程&quot; class=&quot;headerlink&quot; title=&quot;进程&quot;&gt;&lt;/a&gt;进程&lt;/h2&gt;&lt;p&gt;进程：正在进行的一个过程或者说一个任务。而负责执行任务则是cpu。&lt;/p&gt;
&lt;p&gt;系统中的程序可以按照顺序执行，也可以并发执行。其中在顺序执行的过程中主要的特点就是顺序性、封闭性和可再现性，而并发执行的程序，破坏了程序的封闭性和可再现性，使得程序和执行程序的活动不再一一对应，这就涉及到了进程之间的同步和互斥问题&lt;/p&gt;
&lt;p&gt;进程状态的描述有两种模型，一种是三态模型，另一种是五态模型，下边我们就分别介绍下这两种模型。&lt;/p&gt;</summary>
    
    
    
    
    <category term="操作系统" scheme="https://anobiity.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统笔记（1）- 计算机硬件介绍</title>
    <link href="https://anobiity.github.io/2022/08/23/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0-%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D/"/>
    <id>https://anobiity.github.io/2022/08/23/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0-%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D/</id>
    <published>2022-08-23T17:56:38.000Z</published>
    <updated>2022-08-30T14:51:11.804Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;操作系统也是一种软件，但是操作系统是一种非常复杂的软件。操作系统提供了几种抽象模型&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文件：对 I&amp;#x2F;O 设备的抽象&lt;br&gt;虚拟内存：对程序存储器的抽象&lt;br&gt;进程：对一个正在运行程序的抽象&lt;br&gt;虚拟机：对整个操作系统的抽象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;学习操作系统可以让我们有效解决并发问题。&lt;/p&gt;</summary>
    
    
    
    
    <category term="操作系统" scheme="https://anobiity.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://anobiity.github.io/2022/08/22/hello-world/"/>
    <id>https://anobiity.github.io/2022/08/22/hello-world/</id>
    <published>2022-08-22T15:50:35.479Z</published>
    <updated>2022-08-22T15:50:35.479Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
